# this is an auto generated file. This will be overwritten

query SearchCrops(
  $filter: SearchableCropFilterInput
  $sort: [SearchableCropSortInput]
  $limit: Int
  $nextToken: String
  $from: Int
  $aggregates: [SearchableCropAggregationInput]
) {
  searchCrops(
    filter: $filter
    sort: $sort
    limit: $limit
    nextToken: $nextToken
    from: $from
    aggregates: $aggregates
  ) {
    items {
      id
      title
      description
      price
      quantityAvailable
      imageUrl
      location
      cartItems {
        nextToken
        startedAt
        __typename
      }
      purchases {
        nextToken
        startedAt
        __typename
      }
      farmerID
      farmer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    total
    aggregateItems {
      name
      result {
        ... on SearchableAggregateScalarResult {
          value
        }
        ... on SearchableAggregateBucketResult {
          buckets {
            key
            doc_count
            __typename
          }
        }
      }
      __typename
    }
    __typename
  }
}

query GetUser($id: ID!) {
  getUser(id: $id) {
    id
    name
    email
    phone
    ownerID
    role
    crops {
      items {
        id
        title
        description
        price
        quantityAvailable
        imageUrl
        location
        farmerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      nextToken
      startedAt
      __typename
    }
    purchases {
      items {
        id
        buyerID
        farmerID
        cropID
        quantity
        totalAmount
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      nextToken
      startedAt
      __typename
    }
    cart {
      id
      buyerID
      buyer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      items {
        nextToken
        startedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    deliveriesAssigned {
      items {
        id
        purchaseID
        agentID
        deliveryAddress
        deliveryStatus
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      nextToken
      startedAt
      __typename
    }
    sentMessages {
      items {
        id
        senderID
        receiverID
        content
        isRead
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      nextToken
      startedAt
      __typename
    }
    receivedMessages {
      items {
        id
        senderID
        receiverID
        content
        isRead
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      nextToken
      startedAt
      __typename
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListUsers(
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
) {
  listUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      name
      email
      phone
      ownerID
      role
      crops {
        nextToken
        startedAt
        __typename
      }
      purchases {
        nextToken
        startedAt
        __typename
      }
      cart {
        id
        buyerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      deliveriesAssigned {
        nextToken
        startedAt
        __typename
      }
      sentMessages {
        nextToken
        startedAt
        __typename
      }
      receivedMessages {
        nextToken
        startedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncUsers(
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncUsers(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      email
      phone
      ownerID
      role
      crops {
        nextToken
        startedAt
        __typename
      }
      purchases {
        nextToken
        startedAt
        __typename
      }
      cart {
        id
        buyerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      deliveriesAssigned {
        nextToken
        startedAt
        __typename
      }
      sentMessages {
        nextToken
        startedAt
        __typename
      }
      receivedMessages {
        nextToken
        startedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetCrop($id: ID!) {
  getCrop(id: $id) {
    id
    title
    description
    price
    quantityAvailable
    imageUrl
    location
    cartItems {
      items {
        id
        buyerID
        cartID
        cropID
        quantity
        priceAtAdd
        addedAt
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      nextToken
      startedAt
      __typename
    }
    purchases {
      items {
        id
        buyerID
        farmerID
        cropID
        quantity
        totalAmount
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      nextToken
      startedAt
      __typename
    }
    farmerID
    farmer {
      id
      name
      email
      phone
      ownerID
      role
      crops {
        nextToken
        startedAt
        __typename
      }
      purchases {
        nextToken
        startedAt
        __typename
      }
      cart {
        id
        buyerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      deliveriesAssigned {
        nextToken
        startedAt
        __typename
      }
      sentMessages {
        nextToken
        startedAt
        __typename
      }
      receivedMessages {
        nextToken
        startedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListCrops(
  $filter: ModelCropFilterInput
  $limit: Int
  $nextToken: String
) {
  listCrops(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      title
      description
      price
      quantityAvailable
      imageUrl
      location
      cartItems {
        nextToken
        startedAt
        __typename
      }
      purchases {
        nextToken
        startedAt
        __typename
      }
      farmerID
      farmer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncCrops(
  $filter: ModelCropFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncCrops(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      title
      description
      price
      quantityAvailable
      imageUrl
      location
      cartItems {
        nextToken
        startedAt
        __typename
      }
      purchases {
        nextToken
        startedAt
        __typename
      }
      farmerID
      farmer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetCart($id: ID!) {
  getCart(id: $id) {
    id
    buyerID
    buyer {
      id
      name
      email
      phone
      ownerID
      role
      crops {
        nextToken
        startedAt
        __typename
      }
      purchases {
        nextToken
        startedAt
        __typename
      }
      cart {
        id
        buyerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      deliveriesAssigned {
        nextToken
        startedAt
        __typename
      }
      sentMessages {
        nextToken
        startedAt
        __typename
      }
      receivedMessages {
        nextToken
        startedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    items {
      items {
        id
        buyerID
        cartID
        cropID
        quantity
        priceAtAdd
        addedAt
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      nextToken
      startedAt
      __typename
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListCarts(
  $filter: ModelCartFilterInput
  $limit: Int
  $nextToken: String
) {
  listCarts(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      buyerID
      buyer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      items {
        nextToken
        startedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncCarts(
  $filter: ModelCartFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncCarts(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      buyerID
      buyer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      items {
        nextToken
        startedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetCartItem($id: ID!) {
  getCartItem(id: $id) {
    id
    buyerID
    cartID
    cart {
      id
      buyerID
      buyer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      items {
        nextToken
        startedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    cropID
    crop {
      id
      title
      description
      price
      quantityAvailable
      imageUrl
      location
      cartItems {
        nextToken
        startedAt
        __typename
      }
      purchases {
        nextToken
        startedAt
        __typename
      }
      farmerID
      farmer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    quantity
    priceAtAdd
    addedAt
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListCartItems(
  $filter: ModelCartItemFilterInput
  $limit: Int
  $nextToken: String
) {
  listCartItems(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      buyerID
      cartID
      cart {
        id
        buyerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      cropID
      crop {
        id
        title
        description
        price
        quantityAvailable
        imageUrl
        location
        farmerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      quantity
      priceAtAdd
      addedAt
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncCartItems(
  $filter: ModelCartItemFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncCartItems(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      buyerID
      cartID
      cart {
        id
        buyerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      cropID
      crop {
        id
        title
        description
        price
        quantityAvailable
        imageUrl
        location
        farmerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      quantity
      priceAtAdd
      addedAt
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetPurchase($id: ID!) {
  getPurchase(id: $id) {
    id
    buyerID
    buyer {
      id
      name
      email
      phone
      ownerID
      role
      crops {
        nextToken
        startedAt
        __typename
      }
      purchases {
        nextToken
        startedAt
        __typename
      }
      cart {
        id
        buyerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      deliveriesAssigned {
        nextToken
        startedAt
        __typename
      }
      sentMessages {
        nextToken
        startedAt
        __typename
      }
      receivedMessages {
        nextToken
        startedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    farmerID
    farmer {
      id
      name
      email
      phone
      ownerID
      role
      crops {
        nextToken
        startedAt
        __typename
      }
      purchases {
        nextToken
        startedAt
        __typename
      }
      cart {
        id
        buyerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      deliveriesAssigned {
        nextToken
        startedAt
        __typename
      }
      sentMessages {
        nextToken
        startedAt
        __typename
      }
      receivedMessages {
        nextToken
        startedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    cropID
    crop {
      id
      title
      description
      price
      quantityAvailable
      imageUrl
      location
      cartItems {
        nextToken
        startedAt
        __typename
      }
      purchases {
        nextToken
        startedAt
        __typename
      }
      farmerID
      farmer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    delivery {
      id
      purchaseID
      purchase {
        id
        buyerID
        farmerID
        cropID
        quantity
        totalAmount
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      agentID
      agent {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      deliveryAddress
      deliveryStatus
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    quantity
    totalAmount
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListPurchases(
  $filter: ModelPurchaseFilterInput
  $limit: Int
  $nextToken: String
) {
  listPurchases(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      buyerID
      buyer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      farmerID
      farmer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      cropID
      crop {
        id
        title
        description
        price
        quantityAvailable
        imageUrl
        location
        farmerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      delivery {
        id
        purchaseID
        agentID
        deliveryAddress
        deliveryStatus
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      quantity
      totalAmount
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncPurchases(
  $filter: ModelPurchaseFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncPurchases(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      buyerID
      buyer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      farmerID
      farmer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      cropID
      crop {
        id
        title
        description
        price
        quantityAvailable
        imageUrl
        location
        farmerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      delivery {
        id
        purchaseID
        agentID
        deliveryAddress
        deliveryStatus
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      quantity
      totalAmount
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetDelivery($id: ID!) {
  getDelivery(id: $id) {
    id
    purchaseID
    purchase {
      id
      buyerID
      buyer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      farmerID
      farmer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      cropID
      crop {
        id
        title
        description
        price
        quantityAvailable
        imageUrl
        location
        farmerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      delivery {
        id
        purchaseID
        agentID
        deliveryAddress
        deliveryStatus
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      quantity
      totalAmount
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    agentID
    agent {
      id
      name
      email
      phone
      ownerID
      role
      crops {
        nextToken
        startedAt
        __typename
      }
      purchases {
        nextToken
        startedAt
        __typename
      }
      cart {
        id
        buyerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      deliveriesAssigned {
        nextToken
        startedAt
        __typename
      }
      sentMessages {
        nextToken
        startedAt
        __typename
      }
      receivedMessages {
        nextToken
        startedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    deliveryAddress
    deliveryStatus
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListDeliveries(
  $filter: ModelDeliveryFilterInput
  $limit: Int
  $nextToken: String
) {
  listDeliveries(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      purchaseID
      purchase {
        id
        buyerID
        farmerID
        cropID
        quantity
        totalAmount
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      agentID
      agent {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      deliveryAddress
      deliveryStatus
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncDeliveries(
  $filter: ModelDeliveryFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncDeliveries(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      purchaseID
      purchase {
        id
        buyerID
        farmerID
        cropID
        quantity
        totalAmount
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      agentID
      agent {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      deliveryAddress
      deliveryStatus
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetMessage($id: ID!) {
  getMessage(id: $id) {
    id
    senderID
    sender {
      id
      name
      email
      phone
      ownerID
      role
      crops {
        nextToken
        startedAt
        __typename
      }
      purchases {
        nextToken
        startedAt
        __typename
      }
      cart {
        id
        buyerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      deliveriesAssigned {
        nextToken
        startedAt
        __typename
      }
      sentMessages {
        nextToken
        startedAt
        __typename
      }
      receivedMessages {
        nextToken
        startedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    receiverID
    receiver {
      id
      name
      email
      phone
      ownerID
      role
      crops {
        nextToken
        startedAt
        __typename
      }
      purchases {
        nextToken
        startedAt
        __typename
      }
      cart {
        id
        buyerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      deliveriesAssigned {
        nextToken
        startedAt
        __typename
      }
      sentMessages {
        nextToken
        startedAt
        __typename
      }
      receivedMessages {
        nextToken
        startedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    content
    isRead
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListMessages(
  $filter: ModelMessageFilterInput
  $limit: Int
  $nextToken: String
) {
  listMessages(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      senderID
      sender {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      receiverID
      receiver {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      content
      isRead
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncMessages(
  $filter: ModelMessageFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncMessages(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      senderID
      sender {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      receiverID
      receiver {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      content
      isRead
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query UsersByRole(
  $role: UserRole!
  $sortDirection: ModelSortDirection
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
) {
  usersByRole(
    role: $role
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      name
      email
      phone
      ownerID
      role
      crops {
        nextToken
        startedAt
        __typename
      }
      purchases {
        nextToken
        startedAt
        __typename
      }
      cart {
        id
        buyerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      deliveriesAssigned {
        nextToken
        startedAt
        __typename
      }
      sentMessages {
        nextToken
        startedAt
        __typename
      }
      receivedMessages {
        nextToken
        startedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query CropsByFarmer(
  $farmerID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelCropFilterInput
  $limit: Int
  $nextToken: String
) {
  cropsByFarmer(
    farmerID: $farmerID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      title
      description
      price
      quantityAvailable
      imageUrl
      location
      cartItems {
        nextToken
        startedAt
        __typename
      }
      purchases {
        nextToken
        startedAt
        __typename
      }
      farmerID
      farmer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetCartByBuyer(
  $buyerID: ID!
  $sortDirection: ModelSortDirection
  $filter: ModelCartFilterInput
  $limit: Int
  $nextToken: String
) {
  getCartByBuyer(
    buyerID: $buyerID
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      buyerID
      buyer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      items {
        nextToken
        startedAt
        __typename
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query ItemsByCart(
  $cartID: ID!
  $buyerIDAddedAt: ModelCartItemByCartCompositeKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelCartItemFilterInput
  $limit: Int
  $nextToken: String
) {
  itemsByCart(
    cartID: $cartID
    buyerIDAddedAt: $buyerIDAddedAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      buyerID
      cartID
      cart {
        id
        buyerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      cropID
      crop {
        id
        title
        description
        price
        quantityAvailable
        imageUrl
        location
        farmerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      quantity
      priceAtAdd
      addedAt
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query ItemsByCrop(
  $cropID: ID!
  $sortDirection: ModelSortDirection
  $filter: ModelCartItemFilterInput
  $limit: Int
  $nextToken: String
) {
  itemsByCrop(
    cropID: $cropID
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      buyerID
      cartID
      cart {
        id
        buyerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      cropID
      crop {
        id
        title
        description
        price
        quantityAvailable
        imageUrl
        location
        farmerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      quantity
      priceAtAdd
      addedAt
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query PurchasesByBuyer(
  $buyerID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelPurchaseFilterInput
  $limit: Int
  $nextToken: String
) {
  purchasesByBuyer(
    buyerID: $buyerID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      buyerID
      buyer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      farmerID
      farmer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      cropID
      crop {
        id
        title
        description
        price
        quantityAvailable
        imageUrl
        location
        farmerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      delivery {
        id
        purchaseID
        agentID
        deliveryAddress
        deliveryStatus
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      quantity
      totalAmount
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query PurchasesByFarmer(
  $farmerID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelPurchaseFilterInput
  $limit: Int
  $nextToken: String
) {
  purchasesByFarmer(
    farmerID: $farmerID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      buyerID
      buyer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      farmerID
      farmer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      cropID
      crop {
        id
        title
        description
        price
        quantityAvailable
        imageUrl
        location
        farmerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      delivery {
        id
        purchaseID
        agentID
        deliveryAddress
        deliveryStatus
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      quantity
      totalAmount
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query PurchasesByCrop(
  $cropID: ID!
  $sortDirection: ModelSortDirection
  $filter: ModelPurchaseFilterInput
  $limit: Int
  $nextToken: String
) {
  purchasesByCrop(
    cropID: $cropID
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      buyerID
      buyer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      farmerID
      farmer {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      cropID
      crop {
        id
        title
        description
        price
        quantityAvailable
        imageUrl
        location
        farmerID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      delivery {
        id
        purchaseID
        agentID
        deliveryAddress
        deliveryStatus
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      quantity
      totalAmount
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query DeliveriesByPurchase(
  $purchaseID: ID!
  $sortDirection: ModelSortDirection
  $filter: ModelDeliveryFilterInput
  $limit: Int
  $nextToken: String
) {
  deliveriesByPurchase(
    purchaseID: $purchaseID
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      purchaseID
      purchase {
        id
        buyerID
        farmerID
        cropID
        quantity
        totalAmount
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      agentID
      agent {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      deliveryAddress
      deliveryStatus
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query DeliveriesByAgent(
  $agentID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelDeliveryFilterInput
  $limit: Int
  $nextToken: String
) {
  deliveriesByAgent(
    agentID: $agentID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      purchaseID
      purchase {
        id
        buyerID
        farmerID
        cropID
        quantity
        totalAmount
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      agentID
      agent {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      deliveryAddress
      deliveryStatus
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query MessagesBySender(
  $senderID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelMessageFilterInput
  $limit: Int
  $nextToken: String
) {
  messagesBySender(
    senderID: $senderID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      senderID
      sender {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      receiverID
      receiver {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      content
      isRead
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query MessagesByReceiver(
  $receiverID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelMessageFilterInput
  $limit: Int
  $nextToken: String
) {
  messagesByReceiver(
    receiverID: $receiverID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      senderID
      sender {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      receiverID
      receiver {
        id
        name
        email
        phone
        ownerID
        role
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        __typename
      }
      content
      isRead
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}
